//
//  SettingsScreenInteractor.swift
//  LiveChat
//
//  Created by Роман Важник on 29/02/2020.
//  Copyright (c) 2020 Роман Важник. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase

protocol SettingsScreenBusinessLogic {
    func fetchCurrentProfileImage(request: SettingsScreen.FetchCurrentUserImage.Request)
    func changeProfileImage(request: SettingsScreen.ChangeProfileImage.Request)
    func changeName(request: SettingsScreen.ChangeName.Request)
}

protocol SettingsScreenDataStore {
    //var name: String { get set }
}

class SettingsScreenInteractor: SettingsScreenBusinessLogic, SettingsScreenDataStore {
    
    var presenter: SettingsScreenPresentationLogic?
    var worker: SettingsScreenWorker?
    var firebaseManager = FirebaseManager()
    let textValidationManager = TextValidationManager()
    
    func fetchCurrentProfileImage(request: SettingsScreen.FetchCurrentUserImage.Request) {
        firebaseManager.fetchCurrentUser { [weak self] (user) in
            guard let user = user else { return }
            let response = SettingsScreen.FetchCurrentUserImage.Response(user: user)
            self?.presenter?.presentCurrentUserImage(response: response)
        }
    }
    
    func changeProfileImage(request: SettingsScreen.ChangeProfileImage.Request) {
        guard let userId = Auth.auth().currentUser?.uid else { return }
        firebaseManager.saveImageInStorage(withPath: "profileImages", image: request.image) { [weak self] (url, error) in
            guard let url = url else { return }
            let dictionary: [String: Any] = ["profileImage": url.absoluteString]
            let ref = Database.database().reference(withPath: "users").child(userId)
            ref.updateChildValues(dictionary) { (error, ref) in
                if let error = error {
                    print(error)
                    return
                }
                self?.presenter?.presentNewProfileImage(response: SettingsScreen.ChangeProfileImage.Response())
            }
        }
    }
    
    func changeName(request: SettingsScreen.ChangeName.Request) {
        guard let userId = Auth.auth().currentUser?.uid else { return }
        if let error = textValidationManager.validateName(text: request.newName) {
            presenter?.presentNewName(response: SettingsScreen.ChangeName.Response(error: error))
            return
        }
        let ref = Database.database().reference(withPath: "users").child(userId)
        let newNameDictionary: [String: Any] = ["name": request.newName]
        ref.updateChildValues(newNameDictionary) { [weak self] (error, ref) in
            if let error = error {
                print(error)
            }
            self?.presenter?.presentNewName(response: SettingsScreen.ChangeName.Response(error: nil))
        }
    }
}
