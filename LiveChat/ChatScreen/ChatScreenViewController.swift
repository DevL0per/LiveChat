//
//  ChatScreenViewController.swift
//  LiveChat
//
//  Created by Роман Важник on 18/02/2020.
//  Copyright (c) 2020 Роман Важник. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChatScreenDisplayLogic: class {
    func displayLoginScreen(viewModel: ChatScreen.Logout.ViewModel)
    func displayUserName(viewModel: ChatScreen.FetchUserName.ViewModel)
}

class ChatScreenViewController: UIViewController, ChatScreenDisplayLogic {
    
    var interactor: ChatScreenBusinessLogic?
    var router: (NSObjectProtocol & ChatScreenRoutingLogic & ChatScreenDataPassing)?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .red
        setup()
        setupNavigationItemLeftButton()
        setupNavigationItemRightButton()
        interactor?.fetchUserName(request: ChatScreen.FetchUserName.Request())
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    func displayUserName(viewModel: ChatScreen.FetchUserName.ViewModel) {
        navigationItem.title = viewModel.userName
    }
    
    func displayLoginScreen(viewModel: ChatScreen.Logout.ViewModel) {
        self.navigationController?.popViewController(animated: true)
    }
    
    private func setupNavigationItemLeftButton() {
        let button = UIBarButtonItem(title: "Logout", style: .plain, target: self, action: #selector(doLogout))
        navigationItem.leftBarButtonItem = button
    }
    
    @objc private func doLogout() {
        interactor?.doLogout(request: ChatScreen.Logout.Request())
    }
    
    private func setupNavigationItemRightButton() {
        let button = UIBarButtonItem(barButtonSystemItem: .bookmarks, target: self, action: #selector(showAllUsers))
        navigationItem.rightBarButtonItem = button
    }

    @objc private func showAllUsers() {
        let vc = ListOfUsersViewController()
        navigationController?.pushViewController(vc, animated: true)
    }
    
    private func setup() {
        let viewController = self
        let interactor = ChatScreenInteractor()
        let presenter = ChatScreenPresenter()
        let router = ChatScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
}
